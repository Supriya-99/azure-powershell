# Please don't use ADO UI defined scheduled triggers because it takes precedence over YAML scheduled triggers.
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers
schedules:
- cron: "0 0 * * *"
  displayName: Daily Midnight Build
  branches:
    include:
    - master

pr: none

pool:
  vmImage: 'windows-2019'

steps:
- task: PowerShell@2
  displayName: 'Install platyPS'
  inputs:
    targetType: inline
    script: 'Install-Module platyPS -Force -Confirm:$false -Scope CurrentUser'
    pwsh: true

- task: PowerShell@2
  displayName: 'Install PowerShellGet [v2.1.3 has a Publish-Module bug]'
  inputs:
    targetType: inline
    script: |
      Install-Module -Repository PSGallery -Name PowerShellGet -Scope CurrentUser -AllowClobber -Force -SkipPublisherCheck
    pwsh: true

- task: PowerShell@2
  displayName: 'Set up Environment'
  inputs:
    targetType: 'inline'
    script: |
      # Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
      # Avoid issue of filename too long
      git config --global core.longpaths true
      # Wipe any changes from a previous branch
      git clean -xdf
    pwsh: true

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: custom
    custom: msbuild
    arguments: 'build.proj /t:"Build" /p:"Configuration=Release"'

- task: PowerShell@2
  displayName: 'Bump Version'
  inputs:
    targetType: 'inline'
    script: |
      Set-ExecutionPolicy -Scope CurrentUser Bypass
      Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
      cd tools
      ./RunVersionController.ps1 -Release "$(MonthName) $(Year)"
    pwsh: true
    
# - task: PowerShell@2
#   displayName: 'Bump Version'
#   inputs:
#     filePath: 'tools\RunVersionController.ps1'
#     arguments: '-Release "$(MonthName) $(Year)"'

# - task: EsrpCodeSigning@1
#   inputs:
#     ConnectedServiceName: '$(signServiceConnection)'
#     FolderPath: 'artifacts'
#     Pattern: |
#       Release/**/Microsoft*Azure*PowerShell*Cmdlets*.dll
#       Release/**/Az.*.private.dll
#       Release/**/Microsoft.Azure.PowerShell.Authentication.dll
#       Release/**/Microsoft.Azure.PowerShell.Authentication.ResourceManager.dll
#       Release/**/Microsoft.Azure.PowerShell.Authenticators.dll
#       !Release/**/Microsoft*Azure*PowerShell*Cmdlets*.Test.dll
#     UseMinimatch: true
#     signConfigType: 'inlineSignParams'
#     inlineOperation: |
#       [
#             {
#               "KeyCode": "CP-233863-SN",
#               "OperationCode": "StrongNameSign",
#               "Parameters": {},
#               "ToolName": "sign",
#               "ToolVersion": "1.0"
#             },
#             {
#               "KeyCode": "CP-233863-SN",
#               "OperationCode": "StrongNameVerify",
#               "Parameters": {},
#               "ToolName": "sign",
#               "ToolVersion": "1.0"
#             },
#             {
#               "KeyCode": "CP-230012",
#               "OperationCode": "SigntoolSign",
#               "Parameters": {
#                 "OpusName": "Microsoft",
#                 "OpusInfo": "http://www.microsoft.com",
#                 "FileDigest": "/fd \"SHA256\"",
#                 "PageHash": "/NPH",
#                 "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
#               },
#               "ToolName": "sign",
#               "ToolVersion": "1.0"
#             },
#             {
#               "KeyCode": "CP-230012",
#               "OperationCode": "SigntoolVerify",
#               "Parameters": {},
#               "ToolName": "sign",
#               "ToolVersion": "1.0"
#             }
#           ]
#     SessionTimeout: '60'
#     MaxConcurrency: '50'
#     MaxRetryAttempts: '5'

# - task: DotNetCoreCLI@2
#   displayName: Publish
#   inputs:
#     command: custom
#     custom: msbuild
#     arguments: 'build.proj /t:Publish /p:Configuration=Release;NuGetKey=$(NuGetKey)'

# - task: PublishPipelineArtifact@0
#   displayName: 'Save artifacts'
#   inputs:
#     artifactName: artifacts
#     targetPath: artifacts
#   condition: succeededOrFailed()